@Entity
@Table(name = "discounts")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class Discount {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer discountID;

    private Float discount;
    
    @OneToMany(mappedBy = "discount")
    private List<Product> products;

    private Integer quantity;
    private LocalDateTime startTime;
    private LocalDateTime endTime;
}

@Entity
@Table(name = "ie_product")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class IEProduct {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer ieproductID;
    
    private String type;

    @OneToMany(mappedBy = "ieproductID")
    private List<Product> products = new ArrayList<>();

    @ManyToOne
    @JoinColumn(name = "warehouseID")
    private Warehouse warehouse;

    private LocalDateTime time;
}


@Entity
@Table(name = "invoices")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class Invoice {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer invoiceID;

    private LocalDateTime invoiceTime;
    private Integer totalAmount;
    private String paymentStatus;

    @OneToMany(mappedBy = "invoice")
    private List<Order> orders = new ArrayList<>();
}

@Entity
@Table(name = "orders")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer orderID;

    private LocalDateTime orderTime;
    private String status;
    private Integer totalAmount;
    private String address;

    @OneToMany(mappedBy = "order")
    private List<Product> products = new ArrayList<>();

    @ManyToOne
    @JoinColumn(name = "invoiceID")
    private Invoice invoice;
    
    @OneToOne(mappedBy = "order") 
    private User user;

    
}
@Entity
@Table(name = "products")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class Product {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer productID;

    private String productName;
    private Integer price;
    private Integer quantity;
    private String description;

    @ManyToOne
    @JoinColumn(name = "orderID")
    private Order order;

    @ManyToOne
    @JoinColumn(name = "discountID", nullable = true)
    private Discount discount;

    @ManyToOne
    @JoinColumn(name = "ieproductID")
    private IEProduct ieproductID;

    @ManyToOne
    @JoinColumn(name = "warehouseID", nullable = true)
    private Warehouse warehouse;
}
@Entity
@Table(name = "reports")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class Report {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer reportID;

    @ManyToOne
    @JoinColumn(name = "userID")
    private User user;

    private String type;

    private String content;
}
@Entity
@Table(name = "roles")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class Role {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer roleID;

    private String roleName;

    @ManyToMany(mappedBy = "roles")
    private List<User> users = new ArrayList<>();
}
@Entity
@Table(name = "users")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class User {
    @Id
    private String userID;

    private String userName;
    private String passWork;
    private String email;
    private String phone;

    @OneToMany(mappedBy = "user") 
    private List<Report> reports = new ArrayList<>();

    @ManyToMany
    @JoinTable(
        name = "user_roles",
        joinColumns = @JoinColumn(name = "userID"),
        inverseJoinColumns = @JoinColumn(name = "roleID")
    )
    private List<Role> roles = new ArrayList<>();

    @OneToOne
    @JoinColumn(name = "orderID")
    private Order order;
}
@Entity
@Table(name = "warehouses")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor 
public class Warehouse {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer warehouseID;

    @OneToMany(mappedBy = "warehouse")
    private List<Product> products = new ArrayList<>();

    @OneToMany(mappedBy = "warehouse")
    private List<IEProduct> eProducts;

    @OneToMany(mappedBy = "warehouse")
    private List<IEProduct> iProducts;

    private String location;
}
